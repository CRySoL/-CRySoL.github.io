---
migrated: node/1454
layout: post
title: Redmine PAM authentication plugin
created: 1296269544
author: david_villa
category: receta
---
That recipe shows how to configure "redmine":http://<a href="http://www.redmine.org/">www.redmine.org/</a> to use PAM authentication. It includes the PAM authentication plugin code.
<!--break-->
h2. Ingredients

* a working redmine installation
* libpam0g-dev (debian package)
* rpam (gem)

h2. Install dependences


<div class="console">
{% highlight console %}

$ sudo aptitude install libpam0g-dev
$ sudo gem install rpam
{% endhighlight %}
</div>

h2. Testing @rpam@

Write that in a @auth.rb@ file:



<div>
{% highlight ruby %}
#!/usr/bin/ruby

require 'rubygems'
require 'rpam'
include Rpam

user = ARGV[0]
system "stty -echo"
pass = STDIN.gets.strip
system "stty echo"

if authpam(user, pass) == true
      puts "Authenticate Successful"
else
      puts "Authenticate Failure"
end
{% endhighlight %}
</div>


And run it with:


<div class="console">
{% highlight console %}

$ ruby ./auth.rb peter
{write password here}
Authenticate Successful
{% endhighlight %}
</div>

h2. The plugin

Following the instruction of <a href="http://www.redmine.org/projects/redmine wiki/Alternativecustom_authentication_HowTo">Alternative (custom) Authentication HowTo</a>, I wrote that trivial (but working) plugin:

[ "auth_source_pam.rb":https://arco.esi.uclm.es/svn/public/prj/redmine-auth-pam/auth_source_pam.rb ]


<div>
{% highlight ruby %}
require 'rubygems'
require 'rpam'
include Rpam

class AuthSourcePam < AuthSource

  def authenticate(login, password)
    logger.debug "replacement PAM auth called" if logger && logger.debug?

    return nil if login.blank? or password.blank? or not authpam(login, password)

    return [:firstname => login]
  end

  def auth_method_name
    "PAM"
  end

end

{% endhighlight %}
</div>


Put that file in @/usr/share/redmine/app/models/@ (in the case of Debian)

h2. Register the plugin

Like the Authentication HowTo say, you must insert a record in the auth_sources database table. I use sqlite3 so in my case I did:


<div class="console">
{% highlight console %}

$ sqlite3 /var/lib/dbconfig-common/sqlite3/redmine/instances/default/redmine_default
sqlite> insert into auth_sources values (NULL, 'AuthSourcePam', 'Pam', 'localhost', 1, 'user', 'pass', 'app', 'name', 'firstname', 'lastname', 'email', 1, 0);
{% endhighlight %}
</div>


h2. Selecting authentication method

Now, you must restart redmine and go to the user administration page. In the "Authentication" section there is now a new option called "Authentication mode" and you may select among "internal" or "Pam". That is all.

<center>
<img src="/files/redmine-pam.png" alt="redmine-pam" border="1"/>
</center>

h2. Comments

I'm sorry if the plugin code contains errors, but it is my very first Ruby program. Please, comment if you have some suggestion or problem.


h2. References

* "Alternative (custom) Authentication HowTo":http://<a href="http://www.redmine.org/projects/redmine/wiki/Alternativecustom_authentication_HowTo">www.redmine.org/projects/redmine/wiki/Alternativecustom_authentication_HowTo</a>
* "rpam":http://gomix.fedora-ve.org/projects/ruby/wiki/Ruby_PAM

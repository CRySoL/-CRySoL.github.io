---
migrated: node/378
layout: post
title: !binary |-
  TGludXggVnNlcnZlciBlbiA1IG1pbnV0b3M=
created: 1156007811
author: !binary |-
  cGFjbw==
category: !binary |-
  cmVjaXBl
---
bq(head). Linux-Vserver es similar a las zonas de Solaris 9 o a las jaulas de FreeBSD.  Permite ejecutar procesos de forma totalmente aislada respecto a los demás, lo que lo convierte en una especie de máquina virtual ultra-rápida.

<!--break-->

<!-- break -->

h2. Ingredientes

Todos son paquetes Debian:

* linux-image-2.6.17-2-vserver-686
* util-vserver
* vserver-debiantools

h2. Introducción

En una receta anterior "hablábamos de Xen 3.0":http://crysol.inf-cr.uclm.es/node/352 como una buena forma de implementar servidores virtuales en GNU/Linux sin mucho esfuerzo y con poca sobrecarga.  Pero cuando el número de servidores virtuales sobre una misma máquina empieza a crecer es el momento de mirar otras alternativas complementarias.

Xen ofrece un aislamiento total, permitiendo la ejecución simultánea de varios núcleos.  ¿Pero y si no necesitamos varios núcleos?  ¿Y si tan solo queremos limitar el riesgo ante una posible intrusión?  ¿Y si tan solo queremos delegar permisos de administración sobre unos servicios?

Una alternativa escalable es Vserver.  Se trata de un parche para Linux que permiten crear múltiples contextos de seguridad y manejar todos ellos como si se trataran de máquinas virtuales.  Es bastante diferente a Xen, puesto que sólo se ejecuta un núcleo, sólo se dispone de una pila TCP/IP, los recursos están disponibles en todas las máquinas virtuales a no ser que explícitamente se revoquen los permisos.

h2. Instalación

Nada más fácil, todos los paquetes se instalan sin problemas.  El kernel con soporte de vserver está ya precompilado y en Debian se incluyen scripts  para facilitar el trabajo con nuestra distribución favorita.


<div class="console">
{% highlight console %}
# apt-get install linux-image-2.6.17-2-vserver-686 util-vserver vserver-debiantools

{% endhighlight %}
</div>

El grub o el lilo se actualiza solo y el initrd se genera también automáticamente.  Ya sólo queda arrancar el sistema con el nuevo kernel (linux-image-2.6.17-2-vserver-686).

h2. Manejando máquinas virtuales

Para crear un nuevo servidor virtual se puede usar el script @newvserver@ del paquete <em>vserver-debiantools</em>.  Este script usa la utilidad <b>vserver</b> para la instalación inicial y luego realiza algunos ajustes para adaptarla a Debian.  El script se configura con el archivo @/etc/vservers/newvserver-vars@. Una configuración sencilla tendría algo así:

<pre>
DIST="sid"
MIRROR="http://ftp.uk.debian.org/debian"
</pre>

Osea, utiliza por defecto la distribución <em>sid</em> (unstable) y el mirror de UK. Cámbialo por tus preferencias si quieres.

Crear nuevas máquinas virtuales es tan sencillo como:


<div class="console">
{% highlight console %}
# newvserver --hostname nombreDelVserver --domain dominioDelVserver --ip direccionIp

{% endhighlight %}
</div>

Donde <em>nombreDelVserver</em> es el nombre del nuevo servidor (e.g. atlante), <em>dominioDelVserver</em> es el dominio del nuevo servidor (e.g. dyndns.org) y <em>direccionIp</em> es la dirección IP del nuevo servidor (e.g. 192.168.1.145).  La dirección IP puede ser de un rango privado o público, por supuesto.

Tras un rato tendremos un nuevo directorio en /var/lib/vservers que contiene un filesystem completo.  

Se puede arrancar el nuevo servidor con:


<div class="console">
{% highlight console %}
# vserver nombreDelVserver start

{% endhighlight %}
</div>

Y pararlo con:


<div class="console">
{% highlight console %}
# vserver nombreDelVserver stop

{% endhighlight %}
</div>

Podemos entrar en la consola de cualquier servidor con:


<div class="console">
{% highlight console %}
# vserver nombreDelVserver enter

{% endhighlight %}
</div>

Y salir de ella simplemente terminando la shell (Ctrl-D o exit).

Dentro de la consola podemos instalar software con apt, como si se tratara de una máquina aislada.  Las órdenes de gestión de procesos (ps, kill, etc.) solo afectarán a las de esa máquina virtual aunque todos los procesos se están ejecutando en el mismo núcleo.

Para ver qué maquinas están arrancadas y un mínimo de estadísticas:


<div class="console">
{% highlight console %}
$ vserver-stat

{% endhighlight %}
</div>

Para copiar una máquina virtual cambiando la dirección IP y el nombre:


<div class="console">
{% highlight console %}
# vserver-copy --stopstart --ip nuevaIp --domain nuevoDominio nombreDelVserverViejo nombreDelVserverNuevo

{% endhighlight %}
</div>

Y para borrar una máquina virtual que ya no interesa:


<div class="console">
{% highlight console %}
# vserver nombreDelVserver delete

{% endhighlight %}
</div>

La utilidad <em>vserver</em> permite hacer una enorme cantidad de operaciones.  Es más o menos equivalente a la utilidad <em>xm</em> en Xen 3.0.


h2. Detalles de configuración

h3. Compartir los recursos de red

Cada máquina virtual podrá tener una dirección IP distinta, pero todas ellas se asignarán a los mismos interfaces físicos del host.  Si, por ejemplo, queremos ejecutar un sshd en una máquina virtual y también en el host tendremos que modificar ligeramente la configuración del sshd.  Por defecto en /etc/ssh/sshd_config se asume un:

<pre>
ListenAddress 0.0.0.0
</pre>

Esto indica que el servidor de SSH escucha en todas las direcciones IP del host.  Debemos cambiarlo tanto en el host como en las máquinas virtuales para indicar una sóla dirección IP.

h3. Mejorar la seguridad

Seguro que muchos de vosotros habréis oido hablar de los bugs de Linux que permitían escapar de una jaula <em>chroot</em>. Vserver usa una jaula chroot, lo que os puede hacer un poco reticentes a usarlo.  Afortunadamente hay una solución en linux 2.6 usando los atributos extendidos:


<div class="console">
{% highlight console %}
# setattr --barrier /var/lib/vservers

{% endhighlight %}
</div>

Este atributo dificulta aún más el escapar de una jaula chroot en /var/lib/vservers aunque haya errores en el kernel.

Pero lo más importante es limitar las capacidades de las máquinas virtuales al mínimo necesario.  Esto se consigue editando los archivos @/etc/vservers/nombreDelVserver/bcapabilities@ y @/etc/vservers/nombreDelVserver/ccapabilities@. Se puede impedir desde el montaje de nuevos dispositivos hasta la ejecución de determinadas llamadas del sistema.

h3. Una sola dirección IP pública

Si sólo tienes una dirección IP disponible puedes configurar cada vserver en una dirección privada usando un interfaz de red ficticio (dummy) y luego usar iptables para rutar los paquetes hacia fuera como si vinieran de tu única dirección pública. En "esta página":http://linux-vserver.org/HowtoPrivateNetworking tienes cómo.

h2. Coexistencia con Xen

El paquete que incluye el parche de Xen (linux-image-2.6.16-2-xen-vserver-686) también incluye el parche de vserver así que ambos mecanismos pueden hacerse convivir.  Se pueden tener algunas máquinas Xen y tantas Vserver como querramos. Incluso puede haber máquinas que se ejecuten indistintamente con Xen o con Vserver.


h2. Referencias

Esta receta solo araña ligeramente las posibilidades de Vserver.  Es posible limitar lo que es posible hacer desde una máquina virtual para que ni siquiera root pueda realizar determinadas actividades potencialmente peligrosas, o se puede compartir parte del sistema de archivos entre varias máquinas virtuales.  En estas referencias teneis más documentación.

* "Sitio oficial de linux-vserver":http://<a href="http://www.linux-vserver.org/">www.linux-vserver.org/</a>
* "Linux Vservers":http://deb.riseup.net/vserver/
* "Step-by-Step Guide 2.6":http://linux-vserver.org/Step-by-Step+Guide+2.6
* "Running Vservers on Debian":http://<a href="http://www.section6.net/wiki/index.php/Running_Vservers_on_Debian">www.section6.net/wiki/index.php/Running_Vservers_on_Debian</a>
* "Linux-Vserver on Debian Testing (Etch), the easy way":http://<a href="http://www.howtoforge.com/linux_vserver_debian_etch">www.howtoforge.com/linux_vserver_debian_etch</a>
* "Cómo Gentoo Linux-VServer":http://<a href="http://www.gentoo.org/proj/es/vps/vserver-howto.xml">www.gentoo.org/proj/es/vps/vserver-howto.xml</a>

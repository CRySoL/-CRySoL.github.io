---
migrated: node/730
layout: post
title: Tcpstat, estadísticas de la red
created: 1182967374
author: diego
comments: true
category: recipe
tags:
- networking
---
<blockquote class="head">
Tcpstat es un programa que nos da distintas estadísticas sobre la red. Estas estadísticas las puede obtener monitorizando una interfaz de red, o leyéndolas de una captura previa desde un fichero.
</blockquote>

<h2>Introducción</h2>
Tcpstat hace uso de la librería pcap, utilizada para capturar paquetes, al igual que otros programas como tcpdump, wireshark, dsniff o snort. Por lo tanto con Tcpstat podremos analizar ficheros de captura creados con cualquier otro programa compatible con el formato pcap.

<h2>Instalación</h2>
En Debian tan sencillo como:

<div class="console">
{% highlight console %}
# apt-get install tcpstat
{% endhighlight %}
</div>

<h2>Ejecución</h2>
Pcap accede directamente al interfaz de red para poder hacer las mediciones oportunas (capturando los paquetes que pasen por esa interfaz). Por este motivo, tiene que ejecutarse como root si vamos a capturar paquetes de la interfaz de red. No es necesario si los paquetes los lees desde un fichero pcap.

Un pequeño ejemplo puedes ejecutarlo tecleando:

<div class="console">
{% highlight console %}
# tcpstat -i eth0
{% endhighlight %}
</div>
Con esto obtendrás las estadísticas cada 5 segundos, incluyendo la tasa de bps, la media de bytes por paquete y la desviación típica de bytes por paquete.

<h2>Opciones</h2>
A continuación explico las opciones más importantes:

<ul>
<li><b>-F</b> Hace un flush a la salida estándar, útil cuando se utiliza con tuberías o se redirige su salida a algún fichero.
</li>
<li><b>-f "filtro"</b> Aplica un filtro a las estadísticas. Este filtro tiene la misma sintaxis que un filtro de pcap (ver manual de tcpdump)
</li>
<li><b>-o "cadena"</b> Cadena de formato de salida. En el siguiente apartado veremos en qué consiste.
</li>
<li><b>-s segundos</b> Se ejecuta sólo durante el número de segundos especificado, y luego sale. Por defecto se ejecuta hasta que se pulse Control-C.
</li>
<li><b>-p</b> No pone el interfaz en modo promiscuo (por defecto lo pone en modo promiscuo)
</li>
<li><b>-r fichero.pcap</b> Lee del fichero pcap indicado en lugar de una interfaz de red.
</li>
<li><b>-e</b> Elimina los intervalos sin estadísticas.
</li>
<li><b>-l</b> Incluye la capa de enlace en el cálculo del tamaño de paquete.
</li>

<li>También puedes especificar un intervalo de actualización, tras el cual se actualicen las estadísticas. Para especificar un intervalo de actualización de 1 segundo, ejecutarías:

<div class="console">
{% highlight console %}
# tcpstat -i eth0 1
{% endhighlight %}
</div>
</li>
</ol>

<h2>Cadena de formato</h2>

Puedes especificar qué estadísticas queremos ver impresas.

<ol>
<li><b>%A</b>    numero de paquetes ARP</li>
<li><b>%a</b>    tamaño de paquete medio</li>
<li><b>%B</b>    numero de bytes por segundo</li>
<li><b>%b</b>    numero de bits por segundo</li>
<li><b>%C</b>    numero de paquetes ICMP y ICMPv6</li>
<li><b>%d</b>    desviación estándar del tamaño de cada paquete</li>
<li><b>%I</b>    numero de paquetes IPv4</li>
<li><b>%l</b>    carga de la red en el último minuto, similar a uptime</li>
<li><b>%M</b>    tamaño máximo de paquete</li>
<li><b>%m</b>    tamaño mínimo de paquete</li>
<li><b>%N</b>    número de bytes</li>
<li><b>%n</b>    número de paquetes</li>
<li><b>%p</b>    número de paquetes por segundo</li>
<li><b>%R</b>    Lo mismo que %S, pero relativo al primer paquete visto</li>
<li><b>%r</b>    Lo mismo que %s, pero relativo al primer paquete visto</li>
<li><b>%S</b>    El timestamp para el intervalo en segundos después de la "época UNIX"</li>
<li><b>%s</b>    El timestamp para el intervalo en segundos.microsegundos después de la "época UNIX"</li>
<li><b>%T</b>    número de paquetes TCP</li>
<li><b>%U</b>    número de paquetes UDP</li>
<li><b>%V</b>    número de paquetes IPv6</li>
</ol>

Si no especificas ninguna, la cadena de formato por defecto es:
<pre>Time:%S\tn=%n\tavg=%a\tstddev=%d\tbps=%b\n</pre>

Utilizando esta cadena de formato obtendrás como salida algo similar a lo siguiente:
<pre class="console">
Time:1182967131 n=285   avg=643.86      stddev=664.55   bps=293598.40
Time:1182967136 n=347   avg=553.59      stddev=648.45   bps=307352.00
Time:1182967141 n=375   avg=489.45      stddev=628.97   bps=293668.80
Time:1182967146 n=392   avg=530.18      stddev=643.44   bps=332528.00
Time:1182967151 n=345   avg=596.07      stddev=658.98   bps=329032.00
Time:1182967156 n=300   avg=650.89      stddev=664.36   bps=312427.20
Time:1182967161 n=300   avg=660.77      stddev=666.50   bps=317171.20
Time:1182967166 n=132   avg=636.59      stddev=650.23   bps=134448.00</pre>

En cambio, si utilizamos la cadena de formato "bps:%b\n" obtendrás como salida algo similar a lo siguiente:
<pre class="console">bps:257598.40
bps:246494.40
bps:248875.20
bps:247489.60
bps:249275.20
bps:247528.00
bps:245633.60</pre>

<h2>Ejemplos:</h2>
A continuación pongo algunos ejemplos sencillos que te pueden resultar útiles.

Para medir estadísticas de transferencia HTTP

<div class="console">
{% highlight console %}
# tcpstat -f "tcp port http" -i eth0 1
{% endhighlight %}
</div>

Para medir el bitrate de un stream RTP que nos llega al puerto 1234

<div class="console">
{% highlight console %}
# tcpstat -f "udp port 1234" -i eth0 -o "bps=%b\n" 1
{% endhighlight %}
</div>

Para ver el uso de un servidor FTP en modo activo (puerto 21 control y 20 datos)

<div class="console">
{% highlight console %}
# tcpstat -f "port 20 or port 21" -i eth0 1
{% endhighlight %}
</div>

Para ver la tasa de transferencia y carga de la red de un servidor gnump3d

<div class="console">
{% highlight console %}
# tcpstat -f "port 8888" -i eth0 -o "Tasa de transferencia:%b\tCarga de la red:%l\n" 1
{% endhighlight %}
</div>

Para leer las estadísticas de un fichero capturado previamente con Wireshark

<div class="console">
{% highlight console %}
$ tcpstat -r captura.pcap 0.5
{% endhighlight %}
</div>

Con imaginación puedes darle muchos más usos, según lo que necesites monitorizar. Para mayor información sobre los filtros, consulta el manual de tcpdump.

<h2>Conclusión</h2>
Tcpstat puede ser una buena herramienta para administradores de redes y de servidores para obtener diversa información sobre el uso de la red.

<h2>Referencias</h2>

* man tcpstat
* man tcpdump
* man wireshark

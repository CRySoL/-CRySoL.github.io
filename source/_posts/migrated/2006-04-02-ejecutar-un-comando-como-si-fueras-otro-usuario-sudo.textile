---
migrated: node/273
layout: post
title: 'Ejecutar un comando como si fueras otro usuario: sudo'
created: 1144008393
author: arturo
comments: true
category: recipe
render_with_liquid: false
---
<blockquote>
Esta receta explica cómo ejecutar comandos del sistema con los permisos de otro usuario.
</blockquote>

<h2> Introducción </h2>

El principal objetivo de <tt>sudo</tt> es reemplazar al comando <tt>su</tt>. En algunas situaciones puede reemplazar al SUID. La principal ventaja de utilizar sudo es que no es necesario conocer la password de otro usuario para ejecutar comandos con permisos "especiales".

<h2> Configuración </h2>

Lo primero será editar el fichero <tt>/etc/sudoers</tt>. Existe un comando llamado <tt>visudo</tt> que directamente edita el fichero con vi. Pero si alguno no sabe utilizar vi, puede utilizar cualquier otro editor. El fichero tiene el formato siguiente:


<div>
{% highlight text %}
# Host alias specification

# User alias specification

# Cmnd alias specification

# User privilege specification
root    ALL=(ALL) ALL
fulanito  ALL=(ALL) ALL
{% endhighlight %}
</div>

En el podemos ver como el usuario root tiene permiso de todo al igual que el usuario fulanito. Muchos administradores opinan que hacer esto es "peligroso" si los usuarios son noveles, pero ese no es mi caso :-P.

El fichero se divide en tres secciones:

<ul>
<li> Definiciones de alias </li>
<li> Ajuste de opciones por defecto</li>
<li> Reglas de acceso</li>
</ul>

La sección más importante son las reglas de acceso, que tienen esta forma:


<div>
{% highlight text %}
usuario host = (usuario_privilegiado) comando
{% endhighlight %}
</div>

En el ejemplo de antes se ha utilizado un alias especial <tt>ALL</tt> que engloba a todos los comandos, usuarios y demás historias. Para hacer una configuración más afinada lo mejor es que cada uno se cree sus propios alias y configuraciones. El nombre de _usuario privilegiado_ que se pone entre paréntesis es opcional, si no se pone es @root@ por defecto.

Otro punto a comentar es que cuando se ejecuta cualquier comando con sudo, al usuario se le pide su propia password. Esto impide que si un usuario deja una consola abierta otra persona puede realizar operaciones privilegiadas utilizando su sesión. Puedes evitar la comprobación de clave si escribes la palabra @NOPASSWD@ antes del comando.

Por ejemplo, la siguiente línea permite al usuario <tt>webmaster</tt> parar y reiniciar el servidor web sin tener que poner su clave:


<div>
{% highlight text %}
webmaster ALL= (root) NOPASSWD: /etc/init.d/apache2
{% endhighlight %}
</div>

Para evitar esto lo mejor es añadir al usuario en cuestión al grupo sudo. Eso se puede conseguir editando el fichero <tt>/etc/group</tt>



<div>
{% highlight text %}
sudo:x:27:fulanito
{% endhighlight %}
</div>

O ejecutando:


<div class="console">
{% highlight console %}
# addgroup fulanito sudo
{% endhighlight %}
</div>


<h2>Referencias</h2>
<ul>
<li><a href="http://www.wikilearning.com/introduccion-wkccp-455-1.htm">Iniciación de sudo para bisoños</a></li>
<li>man sudo</li>
</ul>
